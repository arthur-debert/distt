#!/bin/bash
# Verify script for Homebrew formula
# Tests installation from the releasee-test tap

set -e

# Get the directory of the current script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Get py-release root directory
PY_RELEASE_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
# Get repository root directory
REPO_ROOT="$(cd "$PY_RELEASE_ROOT/.." && pwd)"

# Source common functions
source "$PY_RELEASE_ROOT/lib/common.sh"
source "$SCRIPT_DIR/lib/brew_utils.sh"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --version=*)
        VERSION="${1#*=}"
        shift
        ;;
    --package-name=*)
        PACKAGE_NAME="${1#*=}"
        shift
        ;;
    --force)
        FORCE=1
        shift
        ;;
    *)
        echo "Unknown argument: $1"
        exit 1
        ;;
    esac
done

# Use defaults if not provided
if [ -z "$PACKAGE_NAME" ]; then
    PACKAGE_NAME=$(get_package_name)
fi

if [ -z "$VERSION" ]; then
    VERSION=$(get_package_version)
fi

# Validate arguments
if [ -z "$PACKAGE_NAME" ]; then
    error "Package name is required"
    exit 1
fi

if [ -z "$VERSION" ]; then
    error "Version is required"
    exit 1
fi

log "Verifying installation of $PACKAGE_NAME version $VERSION from releasee-test tap..."

# Create a temporary directory for testing
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR" && brew untap test/releasee-test 2>/dev/null || true' EXIT

# Create a temporary tap from the releasee-test branch
log "Creating temporary tap from releasee-test branch..."
cd "$REPO_ROOT"
if ! git rev-parse --verify releasee-test >/dev/null 2>&1; then
    error "releasee-test branch does not exist"
    exit 1
fi

# Create temporary tap directory with Formula subdirectory
mkdir -p "$TEMP_DIR/Formula"

# Extract formula from releasee-test branch
git show releasee-test:Formula/$PACKAGE_NAME.rb >"$TEMP_DIR/Formula/$PACKAGE_NAME.rb" || {
    error "Failed to extract formula from releasee-test branch"
    exit 1
}

# Initialize git repository in temporary directory
cd "$TEMP_DIR"
git init -q
git add Formula
git config --local user.email "test@example.com"
git config --local user.name "Test User"
git commit -q -m "Initial commit"

# Tap the temporary repository
log "Tapping temporary repository..."
brew tap test/releasee-test "$TEMP_DIR"

# Install the formula from the tap
log "Installing formula from tap..."
HOMEBREW_NO_AUTO_UPDATE=1 brew install test/releasee-test/$PACKAGE_NAME

# Verify the version
log "Verifying installed version..."
INSTALLED_VERSION=$("$(brew --prefix)/bin/$PACKAGE_NAME" --version | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
if [ "$INSTALLED_VERSION" != "$VERSION" ]; then
    error "Version mismatch: expected $VERSION, got $INSTALLED_VERSION"
    exit 1
fi

# Test the installation
log "Testing installation..."
"$(brew --prefix)/bin/$PACKAGE_NAME" --help

# Clean up
log "Cleaning up..."
brew uninstall test/releasee-test/$PACKAGE_NAME
brew untap test/releasee-test

log "Verification successful"
