#!/bin/bash
# Check script for Homebrew formula
# Tests local installation of the formula

set -e

# Get the directory of the current script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Get py-release root directory
PY_RELEASE_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
# Get repository root directory
REPO_ROOT="$(cd "$PY_RELEASE_ROOT/.." && pwd)"

# Source common functions
source "$PY_RELEASE_ROOT/lib/common.sh"
source "$SCRIPT_DIR/lib/brew_utils.sh"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --version=*)
        VERSION="${1#*=}"
        shift
        ;;
    --package-name=*)
        PACKAGE_NAME="${1#*=}"
        shift
        ;;
    --force)
        FORCE=1
        shift
        ;;
    *)
        echo "Unknown argument: $1"
        exit 1
        ;;
    esac
done

# Use defaults if not provided
if [ -z "$PACKAGE_NAME" ]; then
    PACKAGE_NAME=$(get_package_name)
fi

if [ -z "$VERSION" ]; then
    VERSION=$(get_package_version)
fi

# Validate arguments
if [ -z "$PACKAGE_NAME" ]; then
    error "Package name is required"
    exit 1
fi

if [ -z "$VERSION" ]; then
    error "Version is required"
    exit 1
fi

# Check if formula exists
FORMULA_PATH="$REPO_ROOT/Formula/$PACKAGE_NAME.rb"
if [ ! -f "$FORMULA_PATH" ]; then
    error "Formula not found at $FORMULA_PATH"
    exit 1
fi

# Create a temporary directory for testing
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR" && brew untap test/local 2>/dev/null || true' EXIT

log "Testing local installation of $PACKAGE_NAME version $VERSION..."

# Create a temporary tap
log "Creating temporary tap..."
mkdir -p "$TEMP_DIR/Formula"
cp "$FORMULA_PATH" "$TEMP_DIR/Formula/"
cd "$TEMP_DIR"
git init -q
git add Formula
git config --local user.email "test@example.com"
git config --local user.name "Test User"
git commit -q -m "Initial commit"
brew tap test/local "$TEMP_DIR"

# Install the formula from the temporary tap
log "Installing formula from temporary tap..."
HOMEBREW_NO_AUTO_UPDATE=1 brew install --build-from-source test/local/$PACKAGE_NAME

# Test the installation
log "Testing installation..."
"$(brew --prefix)/bin/$PACKAGE_NAME" --help

# Clean up
log "Cleaning up..."
brew uninstall test/local/$PACKAGE_NAME
brew untap test/local

log "Local installation test successful"
