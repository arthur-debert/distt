#!/bin/bash
set -e

# Get the directory of the current script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Get py-release root directory
PY_RELEASE_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
# Get repository root directory
REPO_ROOT="$(cd "$PY_RELEASE_DIR/.." && pwd)"

# Source common functions
source "$PY_RELEASE_DIR/lib/common.sh"
source "$SCRIPT_DIR/lib/apt_utils.sh"
source "$SCRIPT_DIR/lib/repo_utils.sh"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --version=*)
        VERSION="${1#*=}"
        shift
        ;;
    --package-name=*)
        PACKAGE_NAME="${1#*=}"
        shift
        ;;
    --repo-dir=*)
        REPO_DIR="${1#*=}"
        shift
        ;;
    --gpg-key=*)
        GPG_KEY="${1#*=}"
        shift
        ;;
    --force)
        FORCE=1
        shift
        ;;
    *)
        echo "Unknown argument: $1"
        exit 1
        ;;
    esac
done

main() {
    # Check for required dependencies
    if is_linux; then
        check_dependencies dpkg-scanpackages dpkg python3
    else
        check_dependencies docker
    fi

    # Validate version if provided
    if [ -n "$VERSION" ]; then
        validate_version "$VERSION" || exit 1
    fi

    # Set default repository directory if not provided
    REPO_DIR=${REPO_DIR:-"$REPO_ROOT/apt-repo"}

    # Check if package exists
    DEB_FILE="dist/${PACKAGE_NAME}_${VERSION}_all.deb"
    if [ ! -f "$DEB_FILE" ]; then
        error "Package file not found: $DEB_FILE"
        return 1
    fi

    log "Publishing debian package to repository..."

    # Initialize repository if it doesn't exist
    if [ ! -d "$REPO_DIR" ]; then
        log "Initializing APT repository..."
        init_apt_repo "$REPO_DIR"
    fi

    # Add package to repository
    log "Adding package to repository..."
    add_package_to_repo "$REPO_DIR" "$DEB_FILE"

    # Test repository setup
    log "Testing repository setup..."
    test_repo_setup "$REPO_DIR" || {
        error "Repository setup validation failed"
        return 1
    }

    log "Successfully published package to APT repository"
    log "Repository location: $REPO_DIR"
    log "To use this repository, add the following to /etc/apt/sources.list:"
    log "deb [trusted=yes] file://$REPO_DIR stable main"
    return 0
}

# Run in Docker if not on Linux
run_in_docker "$0" "$@"
