name: Package Release

on:
  # Trigger after a GitHub Release is published
  release:
    types: [published]
  # Add manual trigger option
  workflow_dispatch:
    inputs:
      package-name:
        description: "Package name"
        required: true
      version:
        description: "Version to release"
        required: true
      targets:
        description: "Targets to release to (comma separated)"
        required: false
      force:
        description: "Force release"
        required: false
        type: boolean
      steps:
        description: "Steps to run (comma separated)"
        required: false
        default: "build,check,publish,verify"

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{ inputs.package-name }}
      version: ${{ inputs.version }}
      targets: ${{ inputs.targets }}
      force: ${{ inputs.force }}
      steps: ${{ inputs.steps }}
    steps:
      - name: Set up job
        run: |
          echo "Package name: ${{ inputs.package-name }}"
          echo "Version: ${{ inputs.version }}"
          echo "Targets: ${{ inputs.targets }}"
          echo "Force: ${{ inputs.force }}"
          echo "Steps: ${{ inputs.steps }}"

  release:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Run release steps
        if: ${{ needs.setup.outputs.package_name }}
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          PACKAGE_NAME: ${{ needs.setup.outputs.package_name }}
          TARGETS: ${{ needs.setup.outputs.targets }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.setup.outputs.version }}
          FORCE: ${{ needs.setup.outputs.force }}
          STEPS: ${{ needs.setup.outputs.steps }}
        run: |
          ./py-release/github/build --package-name=$PACKAGE_NAME --version=$VERSION $([[ -n "$FORCE" ]] && echo "--force") && \
          ./py-release/github/publish --package-name=$PACKAGE_NAME --version=$VERSION
