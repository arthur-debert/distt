QA Plan for py-release v1.0.0
===========================

1. Setup Testing
---------------
Status | Test Case | Description | Notes
-------|-----------|-------------|-------
⏳ | Basic Setup | Install to existing project | Check file placement and permissions
⏳ | Test Mode | Run with --test flag | Verify temp dir creation and installation
⏳ | Dependencies | Python and Homebrew deps | Check all required tools are installed
⏳ | Validation | Directory and args validation | Test error handling
⏳ | Idempotency | Multiple runs | Verify safe to run multiple times
⏳ | Cross-Platform | macOS and Linux testing | Verify Homebrew handling

2. Target Testing Matrix
-----------------------
Each target (pypi, github, apt, brew) must pass these tests:

2.1 Structure Tests
Status | Test Case | Description | Notes
-------|-----------|-------------|-------
⏳ | Directory Layout | Check target/{build,check,publish,verify,lib} | Per README
⏳ | Script Permissions | All scripts executable | chmod +x verification
⏳ | Common Lib Usage | Uses common.sh functions | Logging, validation, etc
⏳ | Target Utils | Has target-specific utils | In target/lib directory
⏳ | Argument Handling | Processes --version, --package-name, --force | All scripts

2.2 Step Tests (Per Target)
Target: PyPI
Status | Environment | Step | Description | Notes
-------|-------------|------|-------------|-------
⏳ | Local | build | Build distribution files | Using poetry
⏳ | Local | check | Test local installation | In venv
⏳ | Local | publish | Upload to PyPI | With credentials
⏳ | Local | verify | Verify PyPI installation | From PyPI
⏳ | GitHub | build | Build in Actions | Via workflow
⏳ | GitHub | check | Test in Actions | Via workflow
⏳ | GitHub | publish | Upload in Actions | Via workflow
⏳ | GitHub | verify | Verify in Actions | Via workflow

Target: GitHub
Status | Environment | Step | Description | Notes
-------|-------------|------|-------------|-------
⏳ | Local | build | Prepare release assets | Version check
⏳ | Local | check | Validate assets | Size, format
⏳ | Local | publish | Create GitHub release | Using gh CLI
⏳ | Local | verify | Check release exists | Via API
⏳ | GitHub | build | Build in Actions | Via workflow
⏳ | GitHub | check | Test in Actions | Via workflow
⏳ | GitHub | publish | Release in Actions | Via workflow
⏳ | GitHub | verify | Verify in Actions | Via workflow

Target: APT
Status | Environment | Step | Description | Notes
-------|-------------|------|-------------|-------
⏳ | Local | build | Generate deb package | Requires dpkg
⏳ | Local | check | Test local install | dpkg -i
⏳ | Local | publish | Update APT repo | Commit changes
⏳ | Local | verify | Test apt install | From repo
⏳ | GitHub | build | Build in Actions | Via workflow
⏳ | GitHub | check | Test in Actions | Via workflow
⏳ | GitHub | publish | Update in Actions | Via workflow
⏳ | GitHub | verify | Verify in Actions | Via workflow

Target: Homebrew
Status | Environment | Step | Description | Notes
-------|-------------|------|-------------|-------
⏳ | Local | build | Generate formula | From PyPI data
⏳ | Local | check | Test local install | brew install
⏳ | Local | publish | Update formula | Commit changes
⏳ | Local | verify | Test brew install | From tap
⏳ | GitHub | build | Build in Actions | Via workflow
⏳ | GitHub | check | Test in Actions | Via workflow
⏳ | GitHub | publish | Update in Actions | Via workflow
⏳ | GitHub | verify | Verify in Actions | Via workflow

3. Integration Testing
---------------------
Status | Test Case | Description | Notes
-------|-----------|-------------|-------
⏳ | Full Local Release | Run all targets locally | Complete cycle
⏳ | Full GitHub Release | Run all targets in Actions | Complete cycle
⏳ | Version Handling | Test version updates | All targets
⏳ | Force Updates | Test --force flag | All targets
⏳ | Error Recovery | Test failure scenarios | All targets

Legend:
✅ - Pass
❌ - Fail
⏳ - Not tested
⚠️ - Partial/Issues

Dependencies Required:
---------------------
1. Python Environment:
   - python >= 3.7
   - poetry >= 1.4.0
   - twine >= 4.0.0
   - toml >= 0.10.0
   - jinja2 >= 3.0.0

2. System Tools:
   - gh (GitHub CLI)
   - dpkg-deb (for APT)
   - brew (for Homebrew)
   - git

Testing Process:
---------------
1. Setup Testing:
   ```bash
   # Test basic setup
   ./py-release/setup /tmp/test-project
   
   # Test with --test flag
   ./py-release/setup --test
   ```

2. Target Testing:
   ```bash
   # Test individual target
   ./py-release/new-release --target=pypi --local
   
   # Test specific step
   ./py-release/pypi/build --version=1.0.0
   ```

3. Integration Testing:
   ```bash
   # Full local release
   ./py-release/new-release --local
   
   # Full GitHub release
   ./py-release/new-release
   ```

Current Issues:
--------------
1. Need to verify cross-platform compatibility
2. APT testing requires Linux environment
3. Need to document required credentials/tokens
4. Need to verify GitHub Actions integration 